name: Deploy Workflow

on:
  workflow_call:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project code
        uses: actions/checkout@v4

      - name: Prepare variables and build args
        id: prep
        run: |
          set -euo pipefail

          BUILD_ARGS=""
          ENV_FLAGS=""

          for VAR in $(env); do 
            if [[ "$VAR" =~ ^ARG_ ]]; then 
              NAME=${VAR#ARG_}
              BUILD_ARGS="$BUILD_ARGS --build-arg ${NAME}=${!VAR}"
            fi

            if [[ "$VAR" =~ ^ENV_ ]]; then 
              NAME=${VAR#ENV_}
              ENV_FLAGS="$ENV_FLAGS export ${NAME}='${!VAR}';"   
            fi
          done

          REF="${{ github.ref }}"
          TAG_NAME="${REF##*/}"
          REPO_NAME="${{ github.event.repository.name }}"
          CONTAINER_NAME=$(echo "$REPO_NAME" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME="${CONTAINER_NAME}:${TAG_NAME}"

          echo "image-name=${IMAGE_NAME}" >> $GITHUB_ENV
          echo "container-name=${CONTAINER_NAME}" >> $GITHUB_ENV
          echo "build-args=${BUILD_ARGS}" >> $GITHUB_ENV
          echo "env-flags=${ENV_FLAGS}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          set -euo pipefail
          docker build -f Dockerfile.prod ${{ env.build-args }} -t "${{ secrets.DOCKER_REPO }}/${{ env.image-name }}" .
          docker push "${{ secrets.DOCKER_REPO }}/${{ env.image-name }}"

      - name: Update docker-compose.yml on target server
        run: |
          set -euo pipefail
          ssh -i <(echo "${{ secrets.SSH_PRIVATE_KEY }}") -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} \
            "mkdir -p /srv/mvp-base/prod/${{ env.container-name }}"

          scp -i <(echo "${{ secrets.SSH_PRIVATE_KEY }}") -o StrictHostKeyChecking=no \
            ./docker-compose.prod.yml \
            ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/srv/mvp-infra/${{ env.container-name }}/docker-compose.yml

      - name: Deploy to production
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -euo pipefail

            cd /srv/mvp/${{ env.container-name }}

            export IMAGE_NAME="${{ secrets.DOCKER_REPO }}/${{ env.image-name }}"
            eval "${{ env.env-flags }}"

            docker compose up -d --pull always --remove-orphans

            echo "âœ… Deployment complete."
